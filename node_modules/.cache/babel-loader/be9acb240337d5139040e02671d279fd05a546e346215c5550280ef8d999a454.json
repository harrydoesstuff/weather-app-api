{"ast":null,"code":"var _jsxFileName = \"/Users/harrysmith/Desktop/WEBDEV/weather-ts-react/src/components/Forecast.tsx\";\nimport React from 'react';\nimport { getSunTime, getVisibilityValue } from '../helpers';\nimport Sunrise from './Icons/Sunrise';\nimport Sunset from './Icons/Sunset';\nimport Tile from './Tiles';\nimport MainCard from './MainCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Degree = _ref => {\n  let {\n    temp\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [temp, /*#__PURE__*/_jsxDEV(\"sup\", {\n      children: \"o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Degree;\nconst Forecast = _ref2 => {\n  let {\n    mode,\n    data\n  } = _ref2;\n  const today = data.list[0];\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    mode: mode,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mode ? 'mx-auto w-[300px]' : 'mx-auto w-[300px] text-slate-300',\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-black\",\n          children: [data.name, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-thin\",\n            children: data.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-extrabold\",\n          children: /*#__PURE__*/_jsxDEV(Degree, {\n            temp: Math.round(today.main.temp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: [today.weather[0].main, \" \", today.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: [\"H: \", /*#__PURE__*/_jsxDEV(Degree, {\n            temp: Math.ceil(today.main.temp_max)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 28\n          }, this), \" L: \", /*#__PURE__*/_jsxDEV(Degree, {\n            temp: Math.floor(today.main.temp_min)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 80\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"flex overflow-x-scroll mt-4 pb-2 mb-5\",\n        children: data.list.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline-block text-center w-[50px] flex-shrink-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: i === 0 ? 'Now' : new Date(item.dt * 1000).getHours()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`,\n            alt: `weather-icon-${item.weather[0].description}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-bold\",\n            children: /*#__PURE__*/_jsxDEV(Degree, {\n              temp: Math.round(item.main.temp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: mode ? 'flex flex-wrap justify-between text-zinc-700' : 'flex flex-wrap justify-between text-zinc-700 text-slate-300',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[140px] text-xs font-bold flex flex-col items-center bg-white/20 backdrop-blur-ls rounded drop-shadow-lg py-4 mb-5 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Sunrise, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: getSunTime(data.sunrise)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[140px] text-xs font-bold flex flex-col items-center bg-white/20 backdrop-blur-ls rounded drop-shadow-lg py-4 mb-5 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Sunset, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: getSunTime(data.sunset)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tile, {\n          icon: \"wind\",\n          title: \"Wind\",\n          info: `${Math.round(today.wind.speed)} km/h`,\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tile, {\n          icon: \"feels\",\n          title: \"Feels\",\n          info: /*#__PURE__*/_jsxDEV(Degree, {\n            temp: today.main.feels_like\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 31\n          }, this),\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tile, {\n          icon: \"humidity\",\n          title: \"Humidity\",\n          info: `${today.main.humidity}%`,\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tile, {\n          icon: \"pop\",\n          title: \"Precipitation\",\n          info: `${Math.round(today.pop * 100)}%`,\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tile, {\n          icon: \"pressure\",\n          title: \"Pressure\",\n          info: `${today.main.pressure} hPa`,\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tile, {\n          icon: \"visibility\",\n          title: \"Visibility\",\n          info: getVisibilityValue(today.visibility),\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Forecast;\nexport default Forecast;\nvar _c, _c2;\n$RefreshReg$(_c, \"Degree\");\n$RefreshReg$(_c2, \"Forecast\");","map":{"version":3,"names":["React","getSunTime","getVisibilityValue","Sunrise","Sunset","Tile","MainCard","Degree","temp","Forecast","mode","data","today","list","name","country","Math","round","main","weather","description","ceil","temp_max","floor","temp_min","map","item","i","Date","dt","getHours","icon","sunrise","sunset","wind","speed","feels_like","humidity","pop","pressure","visibility"],"sources":["/Users/harrysmith/Desktop/WEBDEV/weather-ts-react/src/components/Forecast.tsx"],"sourcesContent":["import React from 'react'\nimport { getHumidityValue, getPop, getSunTime, getVisibilityValue, getWindDirection } from '../helpers'\nimport { forecastType } from '../types'\nimport Feels from './Icons/Feels'\nimport Wind from './Icons/Wind'\nimport Sunrise from './Icons/Sunrise'\nimport Sunset from './Icons/Sunset'\nimport Tile from './Tiles'\nimport MainCard from './MainCard'\n\ntype Props = {\n    mode: Boolean\n    data: forecastType\n}\n\nconst Degree = ({ temp }: { temp: number }): JSX.Element => (\n    <span>{temp}<sup>o</sup></span>\n)\n\nconst Forecast = ({ mode, data }: Props): JSX.Element => {\n    const today = data.list[0]\n    return (\n        <MainCard mode={mode}>\n            <div className={mode ? 'mx-auto w-[300px]' : 'mx-auto w-[300px] text-slate-300'}>\n                <section className='text-center'>\n                    <h2 className='text-2xl font-black'>\n                        {data.name}\n                        <span className='font-thin'>{data.country}</span>\n                    </h2>\n                    <h1 className='text-4xl font-extrabold'>\n                        <Degree temp={Math.round(today.main.temp)} />\n                    </h1>\n                    <p className='text-sm'>{today.weather[0].main} {today.weather[0].description}</p>\n                    <p className='text-sm'>\n                        H: <Degree temp={Math.ceil(today.main.temp_max)} /> L: <Degree temp={Math.floor(today.main.temp_min)} />\n                    </p>\n\n                </section>\n\n                <section className='flex overflow-x-scroll mt-4 pb-2 mb-5'>\n                    {data.list.map((item, i) => (\n                        <div className='inline-block text-center w-[50px] flex-shrink-0' key={i}>\n                            <p className='text-sm'>{i === 0 ? 'Now' : new Date(item.dt * 1000).getHours()}</p>\n                            <img src={`http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`} alt={`weather-icon-${item.weather[0].description}`} />\n                            <p className='text-sm font-bold'>\n                                <Degree temp={Math.round(item.main.temp)} />\n                            </p>\n                        </div>\n                    ))}\n                </section>\n\n                <section className={mode ? 'flex flex-wrap justify-between text-zinc-700' : 'flex flex-wrap justify-between text-zinc-700 text-slate-300'}>\n                    <div className='w-[140px] text-xs font-bold flex flex-col items-center bg-white/20 backdrop-blur-ls rounded drop-shadow-lg py-4 mb-5 gap-2'>\n                        <Sunrise />\n                        <p>{getSunTime(data.sunrise)}</p>\n                    </div>\n                    <div className='w-[140px] text-xs font-bold flex flex-col items-center bg-white/20 backdrop-blur-ls rounded drop-shadow-lg py-4 mb-5 gap-2'>\n                        <Sunset />\n                        <p>{getSunTime(data.sunset)}</p>\n                    </div>\n\n                    <Tile\n                        icon=\"wind\"\n                        title=\"Wind\"\n                        info={`${Math.round(today.wind.speed)} km/h`}\n                        mode={mode}\n                    />\n\n                    <Tile\n                        icon=\"feels\"\n                        title=\"Feels\"\n                        info={<Degree temp={today.main.feels_like} />}\n                        mode={mode}\n\n                    />\n\n                    <Tile\n                        icon=\"humidity\"\n                        title=\"Humidity\"\n                        info={`${today.main.humidity}%`}\n                        mode={mode}\n\n\n                    />\n\n                    <Tile\n                        icon=\"pop\"\n                        title=\"Precipitation\"\n                        info={`${Math.round(today.pop * 100)}%`}\n                        mode={mode}\n\n                    />\n\n                    <Tile\n                        icon=\"pressure\"\n                        title=\"Pressure\"\n                        info={`${today.main.pressure} hPa`}\n                        mode={mode}\n\n                    />\n\n                    <Tile\n                        icon=\"visibility\"\n                        title=\"Visibility\"\n                        info={getVisibilityValue(today.visibility)}\n                        mode={mode}\n\n                    />\n                </section>\n\n            </div>\n        </MainCard>\n    )\n}\n\nexport default Forecast"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAmCC,UAAU,EAAEC,kBAAkB,QAA0B,YAAY;AAIvG,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAOjC,MAAMC,MAAM,GAAG;EAAA,IAAC;IAAEC;EAAuB,CAAC;EAAA,oBACtC;IAAA,WAAOA,IAAI,eAAC;MAAA,UAAK;IAAC;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QAAO;AAAA,CAClC;AAAA,KAFKD,MAAM;AAIZ,MAAME,QAAQ,GAAG,SAAwC;EAAA,IAAvC;IAAEC,IAAI;IAAEC;EAAY,CAAC;EACnC,MAAMC,KAAK,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;EAC1B,oBACI,QAAC,QAAQ;IAAC,IAAI,EAAEH,IAAK;IAAA,uBACjB;MAAK,SAAS,EAAEA,IAAI,GAAG,mBAAmB,GAAG,kCAAmC;MAAA,wBAC5E;QAAS,SAAS,EAAC,aAAa;QAAA,wBAC5B;UAAI,SAAS,EAAC,qBAAqB;UAAA,WAC9BC,IAAI,CAACG,IAAI,eACV;YAAM,SAAS,EAAC,WAAW;YAAA,UAAEH,IAAI,CAACI;UAAO;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAChD,eACL;UAAI,SAAS,EAAC,yBAAyB;UAAA,uBACnC,QAAC,MAAM;YAAC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACL,KAAK,CAACM,IAAI,CAACV,IAAI;UAAE;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAC5C,eACL;UAAG,SAAS,EAAC,SAAS;UAAA,WAAEI,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI,EAAC,GAAC,EAACN,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eACjF;UAAG,SAAS,EAAC,SAAS;UAAA,WAAC,KAChB,uBAAC,MAAM;YAAC,IAAI,EAAEJ,IAAI,CAACK,IAAI,CAACT,KAAK,CAACM,IAAI,CAACI,QAAQ;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,QAAI,uBAAC,MAAM;YAAC,IAAI,EAAEN,IAAI,CAACO,KAAK,CAACX,KAAK,CAACM,IAAI,CAACM,QAAQ;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QACxG;MAAA;QAAA;QAAA;QAAA;MAAA,QAEE,eAEV;QAAS,SAAS,EAAC,uCAAuC;QAAA,UACrDb,IAAI,CAACE,IAAI,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACnB;UAAK,SAAS,EAAC,iDAAiD;UAAA,wBAC5D;YAAG,SAAS,EAAC,SAAS;YAAA,UAAEA,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,IAAIC,IAAI,CAACF,IAAI,CAACG,EAAE,GAAG,IAAI,CAAC,CAACC,QAAQ;UAAE;YAAA;YAAA;YAAA;UAAA,QAAK,eAClF;YAAK,GAAG,EAAG,oCAAmCJ,IAAI,CAACP,OAAO,CAAC,CAAC,CAAC,CAACY,IAAK,SAAS;YAAC,GAAG,EAAG,gBAAeL,IAAI,CAACP,OAAO,CAAC,CAAC,CAAC,CAACC,WAAY;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,eACnI;YAAG,SAAS,EAAC,mBAAmB;YAAA,uBAC5B,QAAC,MAAM;cAAC,IAAI,EAAEJ,IAAI,CAACC,KAAK,CAACS,IAAI,CAACR,IAAI,CAACV,IAAI;YAAE;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QAC5C;QAAA,GAL8DmB,CAAC;UAAA;UAAA;UAAA;QAAA,QAO1E;MAAC;QAAA;QAAA;QAAA;MAAA,QACI,eAEV;QAAS,SAAS,EAAEjB,IAAI,GAAG,8CAA8C,GAAG,6DAA8D;QAAA,wBACtI;UAAK,SAAS,EAAC,4HAA4H;UAAA,wBACvI,QAAC,OAAO;YAAA;YAAA;YAAA;UAAA,QAAG,eACX;YAAA,UAAIT,UAAU,CAACU,IAAI,CAACqB,OAAO;UAAC;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAC/B,eACN;UAAK,SAAS,EAAC,4HAA4H;UAAA,wBACvI,QAAC,MAAM;YAAA;YAAA;YAAA;UAAA,QAAG,eACV;YAAA,UAAI/B,UAAU,CAACU,IAAI,CAACsB,MAAM;UAAC;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAC9B,eAEN,QAAC,IAAI;UACD,IAAI,EAAC,MAAM;UACX,KAAK,EAAC,MAAM;UACZ,IAAI,EAAG,GAAEjB,IAAI,CAACC,KAAK,CAACL,KAAK,CAACsB,IAAI,CAACC,KAAK,CAAE,OAAO;UAC7C,IAAI,EAAEzB;QAAK;UAAA;UAAA;UAAA;QAAA,QACb,eAEF,QAAC,IAAI;UACD,IAAI,EAAC,OAAO;UACZ,KAAK,EAAC,OAAO;UACb,IAAI,eAAE,QAAC,MAAM;YAAC,IAAI,EAAEE,KAAK,CAACM,IAAI,CAACkB;UAAW;YAAA;YAAA;YAAA;UAAA,QAAI;UAC9C,IAAI,EAAE1B;QAAK;UAAA;UAAA;UAAA;QAAA,QAEb,eAEF,QAAC,IAAI;UACD,IAAI,EAAC,UAAU;UACf,KAAK,EAAC,UAAU;UAChB,IAAI,EAAG,GAAEE,KAAK,CAACM,IAAI,CAACmB,QAAS,GAAG;UAChC,IAAI,EAAE3B;QAAK;UAAA;UAAA;UAAA;QAAA,QAGb,eAEF,QAAC,IAAI;UACD,IAAI,EAAC,KAAK;UACV,KAAK,EAAC,eAAe;UACrB,IAAI,EAAG,GAAEM,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC0B,GAAG,GAAG,GAAG,CAAE,GAAG;UACxC,IAAI,EAAE5B;QAAK;UAAA;UAAA;UAAA;QAAA,QAEb,eAEF,QAAC,IAAI;UACD,IAAI,EAAC,UAAU;UACf,KAAK,EAAC,UAAU;UAChB,IAAI,EAAG,GAAEE,KAAK,CAACM,IAAI,CAACqB,QAAS,MAAM;UACnC,IAAI,EAAE7B;QAAK;UAAA;UAAA;UAAA;QAAA,QAEb,eAEF,QAAC,IAAI;UACD,IAAI,EAAC,YAAY;UACjB,KAAK,EAAC,YAAY;UAClB,IAAI,EAAER,kBAAkB,CAACU,KAAK,CAAC4B,UAAU,CAAE;UAC3C,IAAI,EAAE9B;QAAK;UAAA;UAAA;UAAA;QAAA,QAEb;MAAA;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA;EAER;IAAA;IAAA;IAAA;EAAA,QACC;AAEnB,CAAC;AAAA,MA9FKD,QAAQ;AAgGd,eAAeA,QAAQ;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}