{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useForecast = () => {\n  _s();\n  const [term, setTerm] = useState('');\n  const [city, setCity] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [forecast, setForecast] = useState(null);\n  const getSearchOptions = value => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=4d9b05e5e16eb293b0beb573d8a928d7`).then(res => res.json()).then(data => setOptions(data));\n  };\n  const onInputChange = e => {\n    const value = e.target.value.trim();\n    setTerm(value);\n    if (value === '') return;\n    getSearchOptions(value);\n  };\n  const getForecast = city => {\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${city.lat}&lon=${city.lon}&units=metric&appid=4d9b05e5e16eb293b0beb573d8a928d7`).then(res => res.json()).then(data => {\n      const forecastData = {\n        ...data.city,\n        list: data.list.slice(0, 16)\n      };\n      setForecast(forecastData);\n    });\n  };\n  const onSubmit = () => {\n    if (!city) return;\n    getForecast(city);\n  };\n  const onOptionSelect = option => {\n    setCity(option);\n  };\n  useEffect(() => {\n    if (city) {\n      setTerm(city.name);\n      setOptions([]);\n    }\n  }, [city]);\n  return {\n    term,\n    options,\n    forecast,\n    onInputChange,\n    onOptionSelect,\n    onSubmit\n  };\n};\n_s(useForecast, \"e32d+/vEJXra7VJZtjMUld4iZ60=\");\nexport default useForecast;","map":{"version":3,"names":["useState","useEffect","useForecast","term","setTerm","city","setCity","options","setOptions","forecast","setForecast","getSearchOptions","value","fetch","trim","then","res","json","data","onInputChange","e","target","getForecast","lat","lon","forecastData","list","slice","onSubmit","onOptionSelect","option","name"],"sources":["/Users/harrysmith/Desktop/WEBDEV/weather-ts-react/src/hooks/useForecast.ts"],"sourcesContent":["import { useState, useEffect, ChangeEvent } from \"react\"\nimport { optionType, forecastType } from \"../types\"\n\nconst useForecast = () => {\n    const [term, setTerm] = useState<string>('')\n    const [city, setCity] = useState<optionType | null>(null)\n    const [options, setOptions] = useState<[]>([])\n    const [forecast, setForecast] = useState<null>(null)\n\n    const getSearchOptions = (value: string) => {\n        fetch(\n            `http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=4d9b05e5e16eb293b0beb573d8a928d7`\n        )\n            .then((res) => res.json())\n            .then((data) => setOptions(data))\n    }\n\n\n\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value.trim()\n        setTerm(value)\n\n        if (value === '') return\n\n\n        getSearchOptions(value)\n    }\n\n    const getForecast = (city: optionType) => {\n        fetch(\n            `https://api.openweathermap.org/data/2.5/forecast?lat=${city.lat}&lon=${city.lon}&units=metric&appid=4d9b05e5e16eb293b0beb573d8a928d7`\n        )\n            .then(res => res.json())\n            .then(data => {\n\n                const forecastData = {\n                    ...data.city,\n                    list: data.list.slice(0, 16)\n                }\n                setForecast(forecastData)\n            })\n    }\n\n\n    const onSubmit = () => {\n        if (!city) return\n\n        getForecast(city)\n    }\n\n    const onOptionSelect = (option: optionType) => {\n        setCity(option)\n    }\n\n    useEffect(() => {\n\n        if (city) {\n            setTerm(city.name)\n            setOptions([])\n        }\n\n    }, [city])\n\n    return {\n        term, options, forecast, onInputChange, onOptionSelect, onSubmit\n    }\n}\n\nexport default useForecast"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAqB,OAAO;AAGxD,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAoB,IAAI,CAAC;EACzD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAK,EAAE,CAAC;EAC9C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAO,IAAI,CAAC;EAEpD,MAAMW,gBAAgB,GAAIC,KAAa,IAAK;IACxCC,KAAK,CACA,kDAAiDD,KAAK,CAACE,IAAI,EAAG,iDAAgD,CAClH,CACIC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKV,UAAU,CAACU,IAAI,CAAC,CAAC;EACzC,CAAC;EAID,MAAMC,aAAa,GAAIC,CAAgC,IAAK;IACxD,MAAMR,KAAK,GAAGQ,CAAC,CAACC,MAAM,CAACT,KAAK,CAACE,IAAI,EAAE;IACnCV,OAAO,CAACQ,KAAK,CAAC;IAEd,IAAIA,KAAK,KAAK,EAAE,EAAE;IAGlBD,gBAAgB,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMU,WAAW,GAAIjB,IAAgB,IAAK;IACtCQ,KAAK,CACA,wDAAuDR,IAAI,CAACkB,GAAI,QAAOlB,IAAI,CAACmB,GAAI,sDAAqD,CACzI,CACIT,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MAEV,MAAMO,YAAY,GAAG;QACjB,GAAGP,IAAI,CAACb,IAAI;QACZqB,IAAI,EAAER,IAAI,CAACQ,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;MAC/B,CAAC;MACDjB,WAAW,CAACe,YAAY,CAAC;IAC7B,CAAC,CAAC;EACV,CAAC;EAGD,MAAMG,QAAQ,GAAG,MAAM;IACnB,IAAI,CAACvB,IAAI,EAAE;IAEXiB,WAAW,CAACjB,IAAI,CAAC;EACrB,CAAC;EAED,MAAMwB,cAAc,GAAIC,MAAkB,IAAK;IAC3CxB,OAAO,CAACwB,MAAM,CAAC;EACnB,CAAC;EAED7B,SAAS,CAAC,MAAM;IAEZ,IAAII,IAAI,EAAE;MACND,OAAO,CAACC,IAAI,CAAC0B,IAAI,CAAC;MAClBvB,UAAU,CAAC,EAAE,CAAC;IAClB;EAEJ,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,OAAO;IACHF,IAAI;IAAEI,OAAO;IAAEE,QAAQ;IAAEU,aAAa;IAAEU,cAAc;IAAED;EAC5D,CAAC;AACL,CAAC;AAAA,GAhEK1B,WAAW;AAkEjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}