{"ast":null,"code":"var _jsxFileName = \"/Users/harrysmith/Desktop/WEBDEV/weather-ts-react/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Search from \"./components/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // http://api.openweathermap.org/geo/1.0/direct?q={city name},{state code},{country code}&limit={limit}&appid={API key}\n\n  const [term, setTerm] = useState('');\n  const [city, setCity] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [forecast, setForecast] = useState(null);\n  const getSearchOptions = value => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=4d9b05e5e16eb293b0beb573d8a928d7`).then(res => res.json()).then(data => setOptions(data));\n  };\n  const onInputChange = e => {\n    const value = e.target.value.trim();\n    setTerm(value);\n    if (value === '') return;\n    getSearchOptions(value);\n  };\n  const getForecast = city => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${city.lat}&lon=${city.lon}&units=metric&appid=4d9b05e5e16eb293b0beb573d8a928d7`).then(res => res.json()).then(data => setForecast(data));\n  };\n  const onSubmit = () => {\n    if (!city) return;\n    getForecast(city);\n  };\n  const onOptionSelect = option => {\n    setCity(option);\n  };\n  useEffect(() => {\n    if (city) {\n      setTerm(city.name);\n      setOptions([]);\n    }\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"flex justify-center items-center bg-gradient-to-br from-sky-400 via-rose-400 to-lime-400 h-[100vh] w-full\",\n    children: /*#__PURE__*/_jsxDEV(Search, {\n      term: term,\n      options: options,\n      onInputChange: onInputChange,\n      onOptionSelect: onOptionSelect,\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"e32d+/vEJXra7VJZtjMUld4iZ60=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Search","App","term","setTerm","city","setCity","options","setOptions","forecast","setForecast","getSearchOptions","value","fetch","trim","then","res","json","data","onInputChange","e","target","getForecast","lat","lon","onSubmit","onOptionSelect","option","name"],"sources":["/Users/harrysmith/Desktop/WEBDEV/weather-ts-react/src/App.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useState } from \"react\"\nimport Search from \"./components/Search\"\nimport { optionType } from \"./types\"\n\nconst App = (): JSX.Element => {\n\n  // http://api.openweathermap.org/geo/1.0/direct?q={city name},{state code},{country code}&limit={limit}&appid={API key}\n\n  const [term, setTerm] = useState<string>('')\n  const [city, setCity] = useState<optionType | null>(null)\n  const [options, setOptions] = useState<[]>([])\n  const [forecast, setForecast] = useState<null>(null)\n\n  const getSearchOptions = (value: string) => {\n    fetch(\n      `http://api.openweathermap.org/geo/1.0/direct?q=${value.trim()}&limit=5&appid=4d9b05e5e16eb293b0beb573d8a928d7`\n    )\n      .then((res) => res.json())\n      .then((data) => setOptions(data))\n  }\n\n\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim()\n    setTerm(value)\n\n    if (value === '') return\n\n\n    getSearchOptions(value)\n  }\n\n  const getForecast = (city: optionType) => {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${city.lat}&lon=${city.lon}&units=metric&appid=4d9b05e5e16eb293b0beb573d8a928d7`\n    )\n      .then(res => res.json())\n      .then(data => setForecast(data))\n  }\n\n  const onSubmit = () => {\n    if (!city) return\n\n    getForecast(city)\n  }\n\n  const onOptionSelect = (option: optionType) => {\n    setCity(option)\n  }\n\n  useEffect(() => {\n\n    if (city) {\n      setTerm(city.name)\n      setOptions([])\n    }\n\n  }, [city])\n\n  return (\n    <main className=\"flex justify-center items-center bg-gradient-to-br from-sky-400 via-rose-400 to-lime-400 h-[100vh] w-full\">\n\n      <Search term={term} options={options} onInputChange={onInputChange} onOptionSelect={onOptionSelect} onSubmit={onSubmit} />\n    </main>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,SAAsBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAOC,MAAM,MAAM,qBAAqB;AAAA;AAGxC,MAAMC,GAAG,GAAG,MAAmB;EAAA;EAE7B;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAoB,IAAI,CAAC;EACzD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAK,EAAE,CAAC;EAC9C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAO,IAAI,CAAC;EAEpD,MAAMW,gBAAgB,GAAIC,KAAa,IAAK;IAC1CC,KAAK,CACF,kDAAiDD,KAAK,CAACE,IAAI,EAAG,iDAAgD,CAChH,CACEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKV,UAAU,CAACU,IAAI,CAAC,CAAC;EACrC,CAAC;EAID,MAAMC,aAAa,GAAIC,CAAgC,IAAK;IAC1D,MAAMR,KAAK,GAAGQ,CAAC,CAACC,MAAM,CAACT,KAAK,CAACE,IAAI,EAAE;IACnCV,OAAO,CAACQ,KAAK,CAAC;IAEd,IAAIA,KAAK,KAAK,EAAE,EAAE;IAGlBD,gBAAgB,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMU,WAAW,GAAIjB,IAAgB,IAAK;IACxCQ,KAAK,CACF,uDAAsDR,IAAI,CAACkB,GAAI,QAAOlB,IAAI,CAACmB,GAAI,sDAAqD,CACtI,CACET,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIR,WAAW,CAACQ,IAAI,CAAC,CAAC;EACpC,CAAC;EAED,MAAMO,QAAQ,GAAG,MAAM;IACrB,IAAI,CAACpB,IAAI,EAAE;IAEXiB,WAAW,CAACjB,IAAI,CAAC;EACnB,CAAC;EAED,MAAMqB,cAAc,GAAIC,MAAkB,IAAK;IAC7CrB,OAAO,CAACqB,MAAM,CAAC;EACjB,CAAC;EAED5B,SAAS,CAAC,MAAM;IAEd,IAAIM,IAAI,EAAE;MACRD,OAAO,CAACC,IAAI,CAACuB,IAAI,CAAC;MAClBpB,UAAU,CAAC,EAAE,CAAC;IAChB;EAEF,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,oBACE;IAAM,SAAS,EAAC,2GAA2G;IAAA,uBAEzH,QAAC,MAAM;MAAC,IAAI,EAAEF,IAAK;MAAC,OAAO,EAAEI,OAAQ;MAAC,aAAa,EAAEY,aAAc;MAAC,cAAc,EAAEO,cAAe;MAAC,QAAQ,EAAED;IAAS;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACrH;AAEX,CAAC;AAAA,GA9DKvB,GAAG;AAAA,KAAHA,GAAG;AAgET,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}